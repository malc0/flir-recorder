import av
import numpy as np
import sys

iron = np.array(((16, 128, 128),
		 (20, 144, 125),
		 (21, 150, 124),
		 (22, 157, 123),
		 (24, 164, 122),
		 (25, 167, 122),
		 (27, 171, 123),
		 (28, 174, 124),
		 (30, 177, 125),
		 (31, 178, 126),
		 (33, 179, 128),
		 (35, 180, 131),
		 (37, 182, 133),
		 (40, 182, 136),
		 (42, 182, 139),
		 (44, 183, 142),
		 (46, 183, 144),
		 (48, 184, 146),
		 (49, 183, 149),
		 (51, 183, 151),
		 (52, 182, 154),
		 (54, 182, 157),
		 (56, 182, 160),
		 (58, 181, 163),
		 (60, 180, 165),
		 (61, 180, 167),
		 (63, 179, 170),
		 (64, 178, 173),
		 (66, 177, 176),
		 (67, 176, 178),
		 (69, 175, 181),
		 (70, 174, 184),
		 (71, 173, 186),
		 (73, 172, 188),
		 (74, 171, 190),
		 (75, 170, 192),
		 (76, 169, 194),
		 (77, 168, 195),
		 (78, 166, 197),
		 (80, 165, 197),
		 (81, 163, 198),
		 (82, 162, 199),
		 (84, 160, 200),
		 (86, 158, 199),
		 (87, 156, 200),
		 (89, 153, 200),
		 (91, 150, 200),
		 (93, 147, 201),
		 (94, 143, 201),
		 (96, 139, 201),
		 (98, 136, 201),
		 (100, 131, 201),
		 (102, 127, 201),
		 (104, 121, 201),
		 (105, 115, 201),
		 (106, 109, 202),
		 (107, 102, 202),
		 (108, 95, 202),
		 (110, 89, 202),
		 (112, 85, 202),
		 (114, 82, 202),
		 (115, 79, 201),
		 (117, 76, 201),
		 (119, 74, 200),
		 (121, 72, 199),
		 (123, 70, 198),
		 (124, 68, 198),
		 (126, 66, 197),
		 (128, 65, 196),
		 (130, 64, 196),
		 (132, 62, 195),
		 (133, 61, 194),
		 (135, 60, 193),
		 (137, 58, 193),
		 (139, 57, 191),
		 (142, 55, 190),
		 (144, 54, 189),
		 (146, 53, 188),
		 (148, 52, 187),
		 (150, 51, 186),
		 (152, 50, 185),
		 (153, 49, 184),
		 (155, 48, 183),
		 (158, 46, 182),
		 (161, 44, 180),
		 (163, 43, 179),
		 (166, 42, 177),
		 (168, 40, 176),
		 (170, 39, 175),
		 (171, 38, 174),
		 (174, 37, 172),
		 (175, 36, 171),
		 (178, 35, 169),
		 (180, 34, 168),
		 (182, 32, 166),
		 (183, 32, 165),
		 (185, 32, 164),
		 (187, 32, 163),
		 (189, 33, 161),
		 (191, 33, 159),
		 (193, 33, 158),
		 (195, 36, 157),
		 (198, 39, 155),
		 (200, 41, 154),
		 (202, 46, 152),
		 (205, 50, 150),
		 (207, 55, 148),
		 (210, 60, 146),
		 (212, 65, 145),
		 (214, 71, 143),
		 (217, 79, 141),
		 (219, 85, 140),
		 (221, 91, 138),
		 (224, 97, 136),
		 (225, 102, 135),
		 (227, 107, 134),
		 (229, 112, 132),
		 (231, 117, 131),
		 (233, 121, 130),
		 (234, 125, 128)), np.uint8)

with open(sys.argv[1], 'rb') as f:
	frames = int.from_bytes(f.read(4), 'little')
	height = int.from_bytes(f.read(4), 'little')
	width = int.from_bytes(f.read(4), 'little')

	outvid = av.open(sys.argv[1] + '.mp4', 'w')
	stream = outvid.add_stream('mpeg4', '50')
	stream.bit_rate = 10000000
	stream.pix_fmt = 'yuv420p'
	stream.width = width
	stream.height = height
	stream.thread_count = 3

	outframe = av.VideoFrame(width, height, 'yuv420p')

	for frameno in range(frames):
		I = np.ndarray(buffer = f.read(width * height * 2), dtype = np.uint16, shape = (height, width))	# 16 bpp
		cmin, cmax = np.percentile(I, (1, 99)).astype(np.uint16)
		I = I.astype(np.int32)
		I = (I - cmin) * iron.shape[0] // (cmax - cmin)
		I[I < 0] = 0
		I[I > iron.shape[0] - 1] = iron.shape[0] - 1
		I = I.astype(np.uint8)
		I2 = I.reshape([I.shape[0] // 2, 2, I.shape[1] // 2, 2]).sum(1).sum(2) // 4
		outframe.planes[0].update(iron[I, 0])
		outframe.planes[1].update(iron[I2, 1])
		outframe.planes[2].update(iron[I2, 2])
		packet = outvid.streams[0].encode(outframe)
		if packet:
			outvid.mux(packet)

	while True:
		packet = stream.encode()
		if not packet:
			break
		outvid.mux(packet)
	outvid.close()

# vim: ts=8 sts=8 sw=8 noexpandtab
